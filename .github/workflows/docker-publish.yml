name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup build variables
        id: meta
        shell: bash
        run: |
          VERSION=$(git describe --always --tags)
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "VERSION: ${VERSION}"

          BUILD_TIME=$(date --rfc-3339=seconds)
          echo "build_time=${BUILD_TIME}" >> $GITHUB_OUTPUT
          echo "BUILD_TIME: ${BUILD_TIME}"

          GO_BUILD_TAGS=
          if [[ "${GITHUB_REF_NAME}" == "main" ]]; then
            GO_BUILD_TAGS=debug
          fi
          echo "go_build_tags=${GO_BUILD_TAGS}" >> $GITHUB_OUTPUT
          echo "GO_BUILD_TAGS: ${GO_BUILD_TAGS}"
          
          if [[ "${GITHUB_REF_NAME}" == "main" ]]; then
            TAGS="${REGISTRY}/${IMAGE_NAME}:development"
          else
            TAGS="${REGISTRY}/${IMAGE_NAME}:latest"
            TAGS+=" , ${REGISTRY}/${IMAGE_NAME}:${VERSION}"
          fi
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT
          echo "TAGS: ${TAGS}"

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |
            VERSION=${{ steps.meta.outputs.version }}
            BUILD_TIME=${{ steps.meta.outputs.build_time }}
            GO_BUILD_TAGS=${{ steps.meta.outputs.go_build_tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-gpu:
    name: Build GPU
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup build variables
        id: meta
        shell: bash
        run: |
          REPOSITORY=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          echo "repository=${REPOSITORY}" >> $GITHUB_OUTPUT
          echo "REPOSITORY: ${REPOSITORY}"

          VERSION=$(git describe --always --tags)
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "VERSION: ${VERSION}"

          BUILD_TIME=$(date --rfc-3339=seconds)
          echo "build_time=${BUILD_TIME}" >> $GITHUB_OUTPUT
          echo "BUILD_TIME: ${BUILD_TIME}"
          
          GO_BUILD_TAGS=
          if [[ "${GITHUB_REF_NAME}" == "main" ]]; then
            GO_BUILD_TAGS=debug
          fi
          echo "go_build_tags=${GO_BUILD_TAGS}" >> $GITHUB_OUTPUT
          echo "GO_BUILD_TAGS: ${GO_BUILD_TAGS}"
          
          if [[ "${GITHUB_REF_NAME}" == "main" ]]; then
            TAGS="${REGISTRY}/${IMAGE_NAME}:development-gpu"
          else
            TAGS="${REGISTRY}/${IMAGE_NAME}:gpu"
            TAGS+=" , ${REGISTRY}/${IMAGE_NAME}:${VERSION}-gpu"
          fi
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT
          echo "TAGS: ${TAGS}"

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          file: ./Dockerfile.gpu
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |
            VERSION=${{ steps.meta.outputs.version }}
            BUILD_TIME=${{ steps.meta.outputs.build_time }}
            GO_BUILD_TAGS=${{ steps.meta.outputs.go_build_tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
